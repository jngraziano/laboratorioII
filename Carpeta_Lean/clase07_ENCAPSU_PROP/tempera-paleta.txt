tempera{

(-)_color:ConsoleColor
(-)_marca:string
(-)_cantidad:int

//constructor 3 parametros

(-)Mostrar():string//instancia

(+)Mostrar(Tempera):string//clase

//sobrecargas

== (tempera, tempera) //marca y color

implicit (tempera) : int // cantidad

+ (Tempera, double) : tempera

}


paleta{

(-)_colores : tempera[]
(-)_cantidadMaximaColores : int

//constructor
(-)()//inicializa en 5 _colores
(-)(int)//cantidad max de colores


implicit (int) : paleta


(-)Mostrar():string


explicit (Paleta):string


==(paleta, tempera):bool
*->si tempera esta en paleta-->true


+(paleta, tempera):paleta
*->si tempera esta en paleta-->incrementa cantidad en tempera
*->si no esta--> agrega la tempera en el primer lugar disponible


-(paleta, tempera):paleta
*->si tempera esta en paleta->decrementa cantidad
*)si cantidad menor o igual a cero, elimina la tempera (null)

+(paleta, paleta):paleta
*->genera una paleta con los colores de ambas paletas.
*)si temperas son iguales-->suma cantidades


//obtenerIndice + 1overload
*)obtenerIndice():int
*-> retorna el indice del primer lugar disponible (null) o valor neg. si no hay lugar
*)obtenerIndice(Tempera):int
*->retorna el indice donde se encuentra la tempera o valor neg. si no la encuentra

}

AGREGAR PROP. DE SOLO ESCRITURA (cantidad)

version indexadores
Generarle a la clase Paleta un indexador


Version colecciones

1)Con List<Tempera>
2)modificar tempera, sacando cantidad y la coleccion en paleta sera un Dictionary<Tempera, double>
